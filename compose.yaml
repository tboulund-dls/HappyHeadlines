services:
  test:
    image: ghcr.io/tboulund-dls/happy-headlines-demo:latest
    build:
      context: demo
      dockerfile: Dockerfile
    depends_on:
      - mailpit

  structurizr:
    image: structurizr/lite
    ports:
      - "8080:8080"
    volumes:
      - ./docs:/usr/local/structurizr

  mailpit:
    image: axllent/mailpit
    container_name: mailpit
    restart: unless-stopped
    volumes:
      - mailpit-data:/data
    ports:
      - 8025:8025
      - 1025:1025
    environment:
      MP_MAX_MESSAGES: 5000
      MP_DATABASE: /data/mailpit.db
      MP_SMTP_AUTH_ACCEPT_ANY: 1
      MP_SMTP_AUTH_ALLOW_INSECURE: 1

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "15672:15672"
    environment:
      RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS: -rabbitmq_management load_definitions "/etc/rabbitmq/definitions.json"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
      - ./rabbitmq-definitions.json:/etc/rabbitmq/definitions.json

  featurehub:
    image: featurehub/party-server:latest
    restart: always
    volumes:
      - featurehub-h2-data:/db
    ports:
      - 8085:8085
  comments:
    image: comments
    container_name: comments
    depends_on:
      comments-db:
        condition: service_healthy
      comments-flyway:
        condition: service_completed_successfully
    build:
      context: .
      dockerfile: comments/src/Dockerfile
    ports:
      - 8080:8080
    networks:
      - happy-headlines-network
  comments-db:
    image: postgres:latest
    hostname: comments-db
    container_name: comments-db
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_NAME:-comments}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - happy-headlines-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-comments}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
  comments-flyway:
    image: flyway/flyway:latest
    container_name: comments-flyway
    command: migrate
    depends_on:
      comments-db:
        condition: service_healthy
    volumes:
      - ./comments/sql:/flyway/sql
    environment:
      FLYWAY_URL: jdbc:postgresql://comments-db:${DB_PORT:-5432}/${DB_NAME:-comments}
      FLYWAY_USER: ${DB_USER:-postgres}
      FLYWAY_PASSWORD: ${DB_PASSWORD:-postgres}
      FLYWAY_SCHEMAS: public
      FLYWAY_CONNECT_RETRIES: 50
    networks:
      - happy-headlines-network


volumes:
  mailpit-data:
  rabbitmq-data:
  featurehub-h2-data:
  postgres_data:

networks:
  happy-headlines-network:
    driver: bridge
