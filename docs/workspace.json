{
  "configuration" : { },
  "description" : "Description",
  "documentation" : { },
  "id" : 1,
  "lastModifiedAgent" : "structurizr-ui",
  "lastModifiedDate" : "2025-04-01T08:54:12Z",
  "model" : {
    "people" : [ {
      "description" : "Drops by the website to get positive news from around the world.",
      "id" : "1",
      "location" : "Unspecified",
      "name" : "Reader",
      "properties" : {
        "structurizr.dsl.identifier" : "reader"
      },
      "relationships" : [ {
        "description" : "Consumes news from the website",
        "destinationId" : "8",
        "id" : "13",
        "sourceId" : "1",
        "tags" : "Relationship"
      }, {
        "description" : "Consumes news from the website",
        "destinationId" : "7",
        "id" : "14",
        "linkedRelationshipId" : "13",
        "sourceId" : "1"
      }, {
        "description" : "Subscribes to the daily newsletter",
        "destinationId" : "8",
        "id" : "15",
        "sourceId" : "1",
        "tags" : "Relationship"
      }, {
        "description" : "Subscribes to the immediate newsletter",
        "destinationId" : "8",
        "id" : "16",
        "sourceId" : "1",
        "tags" : "Relationship"
      } ],
      "tags" : "Element,Person"
    }, {
      "description" : "Gets his positive news from mails or reader applications.",
      "id" : "2",
      "location" : "Unspecified",
      "name" : "BasicSubscriber",
      "properties" : {
        "structurizr.dsl.identifier" : "basicsubscriber"
      },
      "tags" : "Element,Person"
    }, {
      "description" : "Receives a mail with the latest news immediately after they are published",
      "id" : "3",
      "location" : "Unspecified",
      "name" : "ProSubscriber",
      "properties" : {
        "structurizr.dsl.identifier" : "prosubscriber"
      },
      "tags" : "Element,Person"
    }, {
      "description" : "Writes articles for the HappyHeadlines news.",
      "id" : "4",
      "location" : "Unspecified",
      "name" : "Publisher",
      "properties" : {
        "structurizr.dsl.identifier" : "publisher"
      },
      "relationships" : [ {
        "description" : "Writes articles for the system",
        "destinationId" : "17",
        "id" : "22",
        "sourceId" : "4",
        "tags" : "Relationship"
      }, {
        "description" : "Writes articles for the system",
        "destinationId" : "7",
        "id" : "23",
        "linkedRelationshipId" : "22",
        "sourceId" : "4"
      } ],
      "tags" : "Element,Person"
    }, {
      "description" : "Moderate the comments people post to the articles.",
      "id" : "5",
      "location" : "Unspecified",
      "name" : "Moderator",
      "properties" : {
        "structurizr.dsl.identifier" : "moderator"
      },
      "relationships" : [ {
        "description" : "Filtering out profanity",
        "destinationId" : "64",
        "id" : "67",
        "sourceId" : "5",
        "tags" : "Relationship"
      }, {
        "description" : "Filtering out profanity",
        "destinationId" : "7",
        "id" : "68",
        "linkedRelationshipId" : "67",
        "sourceId" : "5"
      } ],
      "tags" : "Element,Person"
    } ],
    "softwareSystems" : [ {
      "description" : "Service that sends out newsletters to subscribers.",
      "documentation" : {
        "sections" : [ {
          "content" : "# Mailpit Overview  \r\n\r\nMailpit is a lightweight email testing tool that provides a web-based interface for capturing and inspecting emails sent from applications in a development or testing environment. It acts as a local SMTP server and webmail client, making it easy to view and debug outgoing emails without sending them to real recipients.  \r\n\r\n## Usage with the Provided Docker Compose Setup  \r\n\r\nThe **Docker Compose** configuration runs Mailpit as a service with the following settings:  \r\n\r\n- **SMTP Server on Port 1025**: Applications can send emails via Mailpit by configuring their SMTP server to `mailpit:1025`.  \r\n- **Web Interface on Port 8025**: Developers can access `http://localhost:8025` to view and inspect captured emails.  \r\n- **Persistent Storage**: Emails are stored in a volume (`mailpit-data`), ensuring they persist across container restarts.  \r\n- **Authentication Flexibility**: The configuration allows Mailpit to accept any SMTP authentication and permit insecure authentication, making it easy to integrate with development setups.  \r\n- **Message Limits**: The setup limits stored messages to **5000** to manage storage efficiently.  \r\n\r\n## Practical Use Cases  \r\n\r\n- Testing email notifications in a local development environment.  \r\n- Debugging email formatting, headers, and content.  \r\n- Ensuring email sending functionality works correctly before deploying to production.  ",
          "filename" : "Documentation.md",
          "format" : "Markdown",
          "order" : 1,
          "title" : ""
        } ]
      },
      "id" : "6",
      "location" : "Unspecified",
      "name" : "Mailpit",
      "properties" : {
        "structurizr.dsl.identifier" : "mailpit"
      },
      "relationships" : [ {
        "description" : "Sends out the latest news immediately after they are published.",
        "destinationId" : "3",
        "id" : "61",
        "sourceId" : "6",
        "tags" : "Relationship"
      }, {
        "description" : "Sends out the latest news daily.",
        "destinationId" : "2",
        "id" : "62",
        "sourceId" : "6",
        "tags" : "Relationship"
      } ],
      "tags" : "Element,Software System,ThirdParty"
    }, {
      "containers" : [ {
        "description" : "Shows the ten most recent articles with one focus article in the very top.",
        "documentation" : {
          "sections" : [ {
            "content" : "<!-- Create mockups of the website here - must include a frontpage and a page displaying a full article. -->",
            "format" : "Markdown",
            "order" : 1,
            "title" : ""
          } ]
        },
        "id" : "8",
        "name" : "Website",
        "properties" : {
          "structurizr.dsl.identifier" : "hh.website"
        },
        "relationships" : [ {
          "description" : "Requesting articles",
          "destinationId" : "9",
          "id" : "11",
          "sourceId" : "8",
          "tags" : "Relationship"
        }, {
          "description" : "Requesting comments",
          "destinationId" : "30",
          "id" : "32",
          "sourceId" : "8",
          "tags" : "Relationship"
        }, {
          "description" : "Posting a comment",
          "destinationId" : "30",
          "id" : "34",
          "sourceId" : "8",
          "tags" : "Relationship"
        }, {
          "description" : "Subscribe to newsletters",
          "destinationId" : "36",
          "id" : "46",
          "sourceId" : "8",
          "tags" : "Relationship"
        }, {
          "description" : "Unsubscribe from newsletters",
          "destinationId" : "36",
          "id" : "47",
          "sourceId" : "8",
          "tags" : "Relationship"
        }, {
          "description" : "Makes API calls",
          "destinationId" : "37",
          "id" : "53",
          "sourceId" : "8",
          "tags" : "Relationship",
          "technology" : "HTTP"
        } ],
        "tags" : "Element,Container,WebBrowser,BlueSquad"
      }, {
        "description" : "Responsible for collecting articles for (sub)systems that request them.",
        "documentation" : {
          "sections" : [ {
            "content" : "<!-- Account for the REST-endpoints of your API here -->",
            "format" : "Markdown",
            "order" : 1,
            "title" : ""
          } ]
        },
        "id" : "9",
        "name" : "ArticleService",
        "properties" : {
          "structurizr.dsl.identifier" : "hh.articleservice"
        },
        "relationships" : [ {
          "description" : "Fetching articles",
          "destinationId" : "10",
          "id" : "12",
          "sourceId" : "9",
          "tags" : "Relationship"
        }, {
          "description" : "Subscribes to the latest articles in order to persist them in a database.",
          "destinationId" : "21",
          "id" : "28",
          "sourceId" : "9",
          "tags" : "Relationship"
        } ],
        "tags" : "Element,Container,Service,RedSquad",
        "technology" : "REST API"
      }, {
        "description" : "Stores all articles that are published on the website.",
        "documentation" : {
          "sections" : [ {
            "content" : "<!-- Create a database schema of the database and display it here -->",
            "format" : "Markdown",
            "order" : 1,
            "title" : ""
          } ]
        },
        "id" : "10",
        "name" : "ArticleDatabase",
        "properties" : {
          "structurizr.dsl.identifier" : "hh.articledatabase"
        },
        "tags" : "Element,Container,Database,RedSquad"
      }, {
        "description" : "The webapp where publishers can write and publish articles.",
        "documentation" : {
          "sections" : [ {
            "content" : "<!-- Create mockups of the website here - must include an overview of current drafts and an editor view -->",
            "format" : "Markdown",
            "order" : 1,
            "title" : ""
          } ]
        },
        "id" : "17",
        "name" : "Webapp",
        "properties" : {
          "structurizr.dsl.identifier" : "hh.webapp"
        },
        "relationships" : [ {
          "description" : "Saving a draft",
          "destinationId" : "19",
          "id" : "24",
          "sourceId" : "17",
          "tags" : "Relationship"
        }, {
          "description" : "Fetching drafts",
          "destinationId" : "19",
          "id" : "25",
          "sourceId" : "17",
          "tags" : "Relationship"
        }, {
          "description" : "Publishing an article",
          "destinationId" : "18",
          "id" : "27",
          "sourceId" : "17",
          "tags" : "Relationship"
        } ],
        "tags" : "Element,Container,WebBrowser,OrangeSquad"
      }, {
        "description" : "Responsible for handling the publishing of articles.",
        "documentation" : {
          "sections" : [ {
            "content" : "<!-- Account for the REST-endpoints of your API here -->",
            "format" : "Markdown",
            "order" : 1,
            "title" : ""
          } ]
        },
        "id" : "18",
        "name" : "PublisherService",
        "properties" : {
          "structurizr.dsl.identifier" : "hh.publisherservice"
        },
        "relationships" : [ {
          "description" : "When an article is being published the article will be put into this queue.",
          "destinationId" : "21",
          "id" : "29",
          "sourceId" : "18",
          "tags" : "Relationship"
        } ],
        "tags" : "Element,Container,Service,OrangeSquad",
        "technology" : "REST API"
      }, {
        "description" : "Responsible for saving drafts of articles.",
        "documentation" : {
          "sections" : [ {
            "content" : "<!-- Account for the REST-endpoints of your API here -->",
            "format" : "Markdown",
            "order" : 1,
            "title" : ""
          } ]
        },
        "id" : "19",
        "name" : "DraftService",
        "properties" : {
          "structurizr.dsl.identifier" : "hh.draftservice"
        },
        "relationships" : [ {
          "description" : "Storing a draft",
          "destinationId" : "20",
          "id" : "26",
          "sourceId" : "19",
          "tags" : "Relationship"
        } ],
        "tags" : "Element,Container,Service,BlackSquad",
        "technology" : "REST API"
      }, {
        "description" : "Stores all drafts of articles.",
        "documentation" : {
          "sections" : [ {
            "content" : "<!-- Create a database schema of the database and display it here -->",
            "format" : "Markdown",
            "order" : 1,
            "title" : ""
          } ]
        },
        "id" : "20",
        "name" : "DraftDatabase",
        "properties" : {
          "structurizr.dsl.identifier" : "hh.draftdatabase"
        },
        "tags" : "Element,Container,Database,BlackSquad"
      }, {
        "description" : "Queue where articles are put in when they are published.",
        "documentation" : {
          "sections" : [ {
            "content" : "<!-- Create a class diagram of the message this queue will contain -->",
            "format" : "Markdown",
            "order" : 1,
            "title" : ""
          } ]
        },
        "id" : "21",
        "name" : "ArticleQueue",
        "properties" : {
          "structurizr.dsl.identifier" : "hh.articlequeue"
        },
        "tags" : "Element,Container,Queue,OrangeSquad"
      }, {
        "description" : "Responsible for handling comments on articles.",
        "documentation" : {
          "sections" : [ {
            "content" : "<!-- Account for the REST-endpoints of your API here -->",
            "format" : "Markdown",
            "order" : 1,
            "title" : ""
          } ]
        },
        "id" : "30",
        "name" : "CommentService",
        "properties" : {
          "structurizr.dsl.identifier" : "hh.commentservice"
        },
        "relationships" : [ {
          "description" : "Fetching comments",
          "destinationId" : "31",
          "id" : "33",
          "sourceId" : "30",
          "tags" : "Relationship"
        }, {
          "description" : "Storing a comment",
          "destinationId" : "31",
          "id" : "35",
          "sourceId" : "30",
          "tags" : "Relationship"
        }, {
          "description" : "Filtering out profanity",
          "destinationId" : "65",
          "id" : "69",
          "sourceId" : "30",
          "tags" : "Relationship"
        } ],
        "tags" : "Element,Container,Service,GreenSquad",
        "technology" : "REST API"
      }, {
        "description" : "Stores all comments that are posted on articles.",
        "documentation" : {
          "sections" : [ {
            "content" : "<!-- Create a database schema of the database and display it here -->",
            "format" : "Markdown",
            "order" : 1,
            "title" : ""
          } ]
        },
        "id" : "31",
        "name" : "CommentDatabase",
        "properties" : {
          "structurizr.dsl.identifier" : "hh.commentdatabase"
        },
        "tags" : "Element,Container,Database,GreenSquad"
      }, {
        "components" : [ {
          "description" : "Handles HTTP requests for subscription actions and getting subscriber data",
          "documentation" : { },
          "id" : "37",
          "name" : "Subscriber Controller",
          "properties" : {
            "structurizr.dsl.identifier" : "hh.subscriberservice.subscribercontroller"
          },
          "relationships" : [ {
            "description" : "Subscribe actions and get subscriber data",
            "destinationId" : "38",
            "id" : "41",
            "sourceId" : "37",
            "tags" : "Relationship"
          } ],
          "tags" : "Element,Component",
          "technology" : ".NET Controller"
        }, {
          "description" : "Provides business logic and validation",
          "documentation" : { },
          "id" : "38",
          "name" : "Subscriber Service",
          "properties" : {
            "structurizr.dsl.identifier" : "hh.subscriberservice.subscriberservice"
          },
          "relationships" : [ {
            "description" : "Subscribe actions and get subscriber data",
            "destinationId" : "39",
            "id" : "42",
            "sourceId" : "38",
            "tags" : "Relationship"
          }, {
            "description" : "Publish subscriber events",
            "destinationId" : "40",
            "id" : "43",
            "sourceId" : "38",
            "tags" : "Relationship"
          } ],
          "tags" : "Element,Component",
          "technology" : ".NET Scoped Service"
        }, {
          "description" : "Communicates with a relation database",
          "documentation" : { },
          "id" : "39",
          "name" : "Subscriber Repository",
          "properties" : {
            "structurizr.dsl.identifier" : "hh.subscriberservice.subscriberrepository"
          },
          "relationships" : [ {
            "description" : "CRUD operations",
            "destinationId" : "44",
            "id" : "51",
            "sourceId" : "39",
            "tags" : "Relationship"
          } ],
          "tags" : "Element,Component",
          "technology" : ".NET Scoped Service"
        }, {
          "description" : "Handles communication with RabbitMQ",
          "documentation" : { },
          "id" : "40",
          "name" : "RabbitMQ Client",
          "properties" : {
            "structurizr.dsl.identifier" : "hh.subscriberservice.rabbitmqclient"
          },
          "relationships" : [ {
            "description" : "Puts new subscribers in queue",
            "destinationId" : "45",
            "id" : "52",
            "sourceId" : "40",
            "tags" : "Relationship"
          } ],
          "tags" : "Element,Component",
          "technology" : ".NET Scoped Service"
        } ],
        "description" : "Responsible for handling subscribers.",
        "documentation" : {
          "sections" : [ {
            "content" : "# Subscriber Service API Documentation\r\n\r\n## Endpoints\r\n\r\n### Get subscribers by type\r\n\r\n```http\r\nGET /api/v1/subscribe/{subscription-type}\r\n```\r\n\r\n#### Path Parameters\r\n\r\n| Name              | Required | Type   | Description                                   |\r\n|-------------------|----------|--------|-----------------------------------------------|\r\n| subscription-type | Yes      | string | The type of subscription to query             |\r\n\r\n**Allowed values for subscription-type:**\r\n- `Basic`\r\n- `Pro`\r\n\r\n### Get subscriptions for an e-mail (subscriber)\r\n\r\n```http\r\nGET /api/v1/subscribe?email={email}\r\n```\r\n\r\n#### Query Parameters\r\n\r\n| Name  | Required | Type   | Description                  |\r\n|-------|----------|--------|------------------------------|\r\n| email | Yes      | string | Email of the subscriber      |\r\n\r\n**Example:**\r\n```\r\nGET /api/v1/subscribe?email=user@example.com\r\n```\r\n\r\n### Subscribe to newsletter\r\n\r\n```http\r\nPOST /api/v1/subscribe\r\n```\r\n\r\n#### Request Body\r\n\r\n| Name              | Required | Type   | Description                                   |\r\n|-------------------|----------|--------|-----------------------------------------------|\r\n| subscription-type | Yes      | string | The subscription tier                         |\r\n| email             | Yes      | string | Email of the subscriber                       |\r\n\r\n**Allowed values for subscription-type:**\r\n- `Basic`\r\n- `Pro`\r\n\r\n### Unsubscribe from newsletter\r\n\r\n```http\r\nDELETE /api/v1/subscribe?email={email}\r\n```\r\n\r\n#### Query Parameters\r\n\r\n| Name  | Required | Type   | Description                  |\r\n|-------|----------|--------|------------------------------|\r\n| email | Yes      | string | Email of the subscriber      |\r\n\r\n**Example:**\r\n```\r\nDELETE /api/v1/subscribe?email=user@example.com\r\n```",
            "format" : "Markdown",
            "order" : 1,
            "title" : ""
          } ]
        },
        "id" : "36",
        "name" : "SubscriberService",
        "properties" : {
          "structurizr.dsl.identifier" : "hh.subscriberservice"
        },
        "relationships" : [ {
          "description" : "Storing a subscriber",
          "destinationId" : "44",
          "id" : "48",
          "sourceId" : "36",
          "tags" : "Relationship"
        }, {
          "description" : "Removing a subscriber",
          "destinationId" : "44",
          "id" : "49",
          "sourceId" : "36",
          "tags" : "Relationship"
        }, {
          "description" : "When a subscriber subscribes, the subscriber will be put into this queue.",
          "destinationId" : "45",
          "id" : "50",
          "sourceId" : "36",
          "tags" : "Relationship"
        } ],
        "tags" : "Element,Container,Service,PurpleSquad",
        "technology" : "REST API"
      }, {
        "description" : "Stores all subscribers.",
        "documentation" : {
          "sections" : [ {
            "content" : "```text\r\n┌───────────────────────────┐       ┌───────────────────────────┐\r\n│      Subscriber           │       │    Subscription Type      │\r\n├───────────────────────────┤       ├───────────────────────────┤\r\n│ Id (PK) : uuid            │       │ Id (PK) : uuid            │\r\n│ E-mail  : nvarchar        │       │ Type    : nvarchar        │\r\n└─────────────┬─────────────┘       └──────────────┬────────────┘\r\n              │                                    │\r\n              │                                    │\r\n              │                                    │\r\n              │                                    │\r\n┌─────────────▼──────────────────────────────────┐ │\r\n│         Subscriber Subscription                │ │\r\n├────────────────────────────────────────────────┤ │\r\n│ Id (PK)                   : uuid               │ │\r\n│ Subscriber Id (FK)        : uuid               │ │\r\n│ Subscription Type Id (FK) : uuid               │<┘\r\n└────────────────────────────────────────────────┘\r\n```",
            "format" : "Markdown",
            "order" : 1,
            "title" : ""
          } ]
        },
        "id" : "44",
        "name" : "SubscriberDatabase",
        "properties" : {
          "structurizr.dsl.identifier" : "hh.subscriberdatabase"
        },
        "tags" : "Element,Container,Database,PurpleSquad"
      }, {
        "description" : "Queue where subscribers are put in when they subscribe.",
        "documentation" : {
          "sections" : [ {
            "content" : "<!-- Create a class diagram of the message this queue will contain -->\r\n\r\n# Subscriber Queue\r\nWhen a new subscriber is added to the database, a message is sent to the subscriber queue. The message contains the subscriber's email and the subscription type.\r\n```json\r\n{\r\n  \"subscriberMail\": \"string\",\r\n  \"subscriptionType\": \"string\"\r\n}\r\n```",
            "format" : "Markdown",
            "order" : 1,
            "title" : ""
          } ]
        },
        "id" : "45",
        "name" : "SubscriberQueue",
        "properties" : {
          "structurizr.dsl.identifier" : "hh.subscriberqueue"
        },
        "tags" : "Element,Container,Queue,PurpleSquad"
      }, {
        "description" : "Responsible for sending out newsletters to subscribers.",
        "documentation" : {
          "sections" : [ {
            "content" : "<!-- Account for the REST-endpoints of your API here -->\r\n<!-- Draw mockups of the different mails sent by the service -->",
            "format" : "Markdown",
            "order" : 1,
            "title" : ""
          } ]
        },
        "id" : "54",
        "name" : "NewsletterService",
        "properties" : {
          "structurizr.dsl.identifier" : "hh.newsletterservice"
        },
        "relationships" : [ {
          "description" : "Request article for daily newsletter",
          "destinationId" : "9",
          "id" : "55",
          "sourceId" : "54",
          "tags" : "Relationship"
        }, {
          "description" : "Subscribes to receive the latest news first for immediate newsletter",
          "destinationId" : "21",
          "id" : "56",
          "sourceId" : "54",
          "tags" : "Relationship"
        }, {
          "description" : "Sends out the latest news immediately after they are published.",
          "destinationId" : "6",
          "id" : "57",
          "sourceId" : "54",
          "tags" : "Relationship"
        }, {
          "description" : "Send a welcome mail to new subscribers",
          "destinationId" : "45",
          "id" : "59",
          "sourceId" : "54",
          "tags" : "Relationship"
        }, {
          "description" : "Gets all subscribers to send the newsletters to.",
          "destinationId" : "36",
          "id" : "60",
          "sourceId" : "54",
          "tags" : "Relationship"
        }, {
          "description" : "Makes API calls",
          "destinationId" : "37",
          "id" : "63",
          "sourceId" : "54",
          "tags" : "Relationship",
          "technology" : "HTTP"
        }, {
          "description" : "Sends out newsletters to subscribers.",
          "destinationId" : "6",
          "id" : "74",
          "sourceId" : "54",
          "tags" : "Relationship"
        } ],
        "tags" : "Element,Container,Service,RedSquad",
        "technology" : "REST API"
      }, {
        "description" : "The portal where profanity words can be added, removed, and fetched.",
        "documentation" : {
          "sections" : [ {
            "content" : "<!-- Create mockups of the portal here - here it must be able to manage profanity words -->",
            "format" : "Markdown",
            "order" : 1,
            "title" : ""
          } ]
        },
        "id" : "64",
        "name" : "ProfanityPortal",
        "properties" : {
          "structurizr.dsl.identifier" : "hh.profanityportal"
        },
        "relationships" : [ {
          "description" : "Adding a new profanity word",
          "destinationId" : "65",
          "id" : "71",
          "sourceId" : "64",
          "tags" : "Relationship"
        }, {
          "description" : "Removing a profanity word",
          "destinationId" : "65",
          "id" : "72",
          "sourceId" : "64",
          "tags" : "Relationship"
        }, {
          "description" : "Fetching all profanity words",
          "destinationId" : "65",
          "id" : "73",
          "sourceId" : "64",
          "tags" : "Relationship"
        } ],
        "tags" : "Element,Container,WebBrowser,CyanSquad"
      }, {
        "description" : "Responsible for filtering out profanity in comments.",
        "documentation" : {
          "sections" : [ {
            "content" : "<!-- Account for the REST-endpoints of your API here -->",
            "format" : "Markdown",
            "order" : 1,
            "title" : ""
          } ]
        },
        "id" : "65",
        "name" : "ProfanityService",
        "properties" : {
          "structurizr.dsl.identifier" : "hh.profanityservice"
        },
        "relationships" : [ {
          "description" : "Fetching profanity words",
          "destinationId" : "66",
          "id" : "70",
          "sourceId" : "65",
          "tags" : "Relationship"
        } ],
        "tags" : "Element,Container,Service,CyanSquad",
        "technology" : "REST API"
      }, {
        "description" : "Stores all profanity words.",
        "documentation" : {
          "sections" : [ {
            "content" : "<!-- Create a database schema of the database and display it here -->",
            "format" : "Markdown",
            "order" : 1,
            "title" : ""
          } ]
        },
        "id" : "66",
        "name" : "ProfanityDatabase",
        "properties" : {
          "structurizr.dsl.identifier" : "hh.profanitydatabase"
        },
        "tags" : "Element,Container,Database,CyanSquad"
      } ],
      "description" : "Your go-to source for uplifting, inspiring, and feel-good news from around the world.",
      "documentation" : {
        "images" : [ {
          "content" : "",
          "name" : "DomainModel.png",
          "type" : "image/png"
        } ],
        "sections" : [ {
          "content" : "The following Domain Model is a draft of the complete system based on all services.\r\n![](DomainModel.png)",
          "filename" : "Documentation.md",
          "format" : "Markdown",
          "order" : 1,
          "title" : ""
        } ]
      },
      "id" : "7",
      "location" : "Unspecified",
      "name" : "Happy Headlines",
      "properties" : {
        "structurizr.dsl.identifier" : "hh"
      },
      "relationships" : [ {
        "description" : "Sends out the latest news immediately after they are published.",
        "destinationId" : "6",
        "id" : "58",
        "linkedRelationshipId" : "57",
        "sourceId" : "7"
      } ],
      "tags" : "Element,Software System"
    } ]
  },
  "name" : "Name",
  "properties" : {
    "structurizr.dsl" : ""
  },
  "views" : {
    "componentViews" : [ {
      "automaticLayout" : {
        "applied" : false,
        "edgeSeparation" : 0,
        "implementation" : "Graphviz",
        "nodeSeparation" : 300,
        "rankDirection" : "LeftRight",
        "rankSeparation" : 300,
        "vertices" : false
      },
      "containerId" : "8",
      "externalContainerBoundariesVisible" : false,
      "key" : "Website",
      "order" : 3
    }, {
      "automaticLayout" : {
        "applied" : false,
        "edgeSeparation" : 0,
        "implementation" : "Graphviz",
        "nodeSeparation" : 300,
        "rankDirection" : "LeftRight",
        "rankSeparation" : 300,
        "vertices" : false
      },
      "containerId" : "19",
      "externalContainerBoundariesVisible" : false,
      "key" : "DraftService",
      "order" : 4
    }, {
      "automaticLayout" : {
        "applied" : false,
        "edgeSeparation" : 0,
        "implementation" : "Graphviz",
        "nodeSeparation" : 300,
        "rankDirection" : "LeftRight",
        "rankSeparation" : 300,
        "vertices" : false
      },
      "containerId" : "30",
      "externalContainerBoundariesVisible" : false,
      "key" : "CommentService",
      "order" : 5
    }, {
      "automaticLayout" : {
        "applied" : false,
        "edgeSeparation" : 0,
        "implementation" : "Graphviz",
        "nodeSeparation" : 300,
        "rankDirection" : "LeftRight",
        "rankSeparation" : 300,
        "vertices" : false
      },
      "containerId" : "18",
      "externalContainerBoundariesVisible" : false,
      "key" : "PublisherService",
      "order" : 6
    }, {
      "automaticLayout" : {
        "applied" : false,
        "edgeSeparation" : 0,
        "implementation" : "Graphviz",
        "nodeSeparation" : 300,
        "rankDirection" : "LeftRight",
        "rankSeparation" : 300,
        "vertices" : false
      },
      "containerId" : "17",
      "externalContainerBoundariesVisible" : false,
      "key" : "Webapp",
      "order" : 7
    }, {
      "automaticLayout" : {
        "applied" : true,
        "edgeSeparation" : 0,
        "implementation" : "Graphviz",
        "nodeSeparation" : 300,
        "rankDirection" : "LeftRight",
        "rankSeparation" : 300,
        "vertices" : false
      },
      "containerId" : "36",
      "dimensions" : {
        "height" : 2009,
        "width" : 3850
      },
      "elements" : [ {
        "id" : "8",
        "x" : 200,
        "y" : 785
      }, {
        "id" : "37",
        "x" : 950,
        "y" : 785
      }, {
        "id" : "38",
        "x" : 1700,
        "y" : 785
      }, {
        "id" : "39",
        "x" : 2450,
        "y" : 185
      }, {
        "id" : "40",
        "x" : 2450,
        "y" : 785
      }, {
        "id" : "44",
        "x" : 3200,
        "y" : 185
      }, {
        "id" : "45",
        "x" : 3200,
        "y" : 1085
      }, {
        "id" : "54",
        "x" : 200,
        "y" : 1385
      } ],
      "externalContainerBoundariesVisible" : false,
      "key" : "SubscriberService",
      "order" : 8,
      "relationships" : [ {
        "id" : "41"
      }, {
        "id" : "42"
      }, {
        "id" : "43"
      }, {
        "id" : "51"
      }, {
        "id" : "52"
      }, {
        "id" : "53"
      }, {
        "id" : "59"
      }, {
        "id" : "63"
      } ]
    }, {
      "automaticLayout" : {
        "applied" : false,
        "edgeSeparation" : 0,
        "implementation" : "Graphviz",
        "nodeSeparation" : 300,
        "rankDirection" : "LeftRight",
        "rankSeparation" : 300,
        "vertices" : false
      },
      "containerId" : "9",
      "externalContainerBoundariesVisible" : false,
      "key" : "ArticleService",
      "order" : 9
    }, {
      "automaticLayout" : {
        "applied" : false,
        "edgeSeparation" : 0,
        "implementation" : "Graphviz",
        "nodeSeparation" : 300,
        "rankDirection" : "LeftRight",
        "rankSeparation" : 300,
        "vertices" : false
      },
      "containerId" : "54",
      "externalContainerBoundariesVisible" : false,
      "key" : "NewsletterService",
      "order" : 10
    }, {
      "automaticLayout" : {
        "applied" : false,
        "edgeSeparation" : 0,
        "implementation" : "Graphviz",
        "nodeSeparation" : 300,
        "rankDirection" : "LeftRight",
        "rankSeparation" : 300,
        "vertices" : false
      },
      "containerId" : "65",
      "externalContainerBoundariesVisible" : false,
      "key" : "ProfanityService",
      "order" : 11
    } ],
    "configuration" : {
      "branding" : { },
      "lastSavedView" : "SubscriberService",
      "metadataSymbols" : "SquareBrackets",
      "styles" : {
        "elements" : [ {
          "background" : "#d3d3d3",
          "tag" : "ThirdParty"
        }, {
          "color" : "#ffffff",
          "tag" : "Element"
        }, {
          "background" : "#9b191f",
          "shape" : "Person",
          "tag" : "Person"
        }, {
          "background" : "#ba1e25",
          "tag" : "Software System"
        }, {
          "shape" : "MobileDeviceLandscape",
          "tag" : "App"
        }, {
          "shape" : "Cylinder",
          "tag" : "Database"
        }, {
          "background" : "#d9232b",
          "tag" : "Container"
        }, {
          "background" : "#e66c5a",
          "tag" : "Component"
        }, {
          "shape" : "WebBrowser",
          "tag" : "WebBrowser"
        }, {
          "background" : "#0000ff",
          "tag" : "BlueSquad"
        }, {
          "background" : "#008000",
          "tag" : "GreenSquad"
        }, {
          "background" : "#ffa500",
          "tag" : "OrangeSquad"
        }, {
          "background" : "#000000",
          "tag" : "BlackSquad"
        }, {
          "background" : "#800080",
          "tag" : "PurpleSquad"
        }, {
          "background" : "#ff0000",
          "tag" : "RedSquad"
        }, {
          "background" : "#00ffff",
          "color" : "#000000",
          "tag" : "CyanSquad"
        }, {
          "shape" : "Pipe",
          "tag" : "Queue"
        }, {
          "shape" : "Hexagon",
          "tag" : "Service"
        } ]
      },
      "terminology" : { }
    },
    "containerViews" : [ {
      "dimensions" : {
        "height" : 4475,
        "width" : 4892
      },
      "elements" : [ {
        "id" : "1",
        "x" : 200,
        "y" : 1315
      }, {
        "id" : "2",
        "x" : 3555,
        "y" : 3815
      }, {
        "id" : "3",
        "x" : 1951,
        "y" : 3840
      }, {
        "id" : "4",
        "x" : 2760,
        "y" : 165
      }, {
        "id" : "5",
        "x" : 1975,
        "y" : 225
      }, {
        "id" : "6",
        "x" : 2736,
        "y" : 3885
      }, {
        "id" : "8",
        "x" : 1265,
        "y" : 1395
      }, {
        "id" : "9",
        "x" : 2695,
        "y" : 2565
      }, {
        "id" : "10",
        "x" : 3700,
        "y" : 2605
      }, {
        "id" : "17",
        "x" : 2745,
        "y" : 855
      }, {
        "id" : "18",
        "x" : 4167,
        "y" : 1245
      }, {
        "id" : "19",
        "x" : 3495,
        "y" : 855
      }, {
        "id" : "20",
        "x" : 4222,
        "y" : 885
      }, {
        "id" : "21",
        "x" : 4175,
        "y" : 3335
      }, {
        "id" : "30",
        "x" : 2360,
        "y" : 1970
      }, {
        "id" : "31",
        "x" : 3140,
        "y" : 2055
      }, {
        "id" : "36",
        "x" : 895,
        "y" : 2650
      }, {
        "id" : "44",
        "x" : 850,
        "y" : 2020
      }, {
        "id" : "45",
        "x" : 920,
        "y" : 3325
      }, {
        "id" : "54",
        "x" : 2700,
        "y" : 3280
      }, {
        "id" : "64",
        "x" : 1975,
        "y" : 840
      }, {
        "id" : "65",
        "x" : 1985,
        "y" : 1325
      }, {
        "id" : "66",
        "x" : 2780,
        "y" : 1575
      } ],
      "externalSoftwareSystemBoundariesVisible" : false,
      "key" : "HappyHeadlines",
      "order" : 2,
      "relationships" : [ {
        "id" : "11",
        "vertices" : [ {
          "x" : 2110,
          "y" : 2600
        } ]
      }, {
        "id" : "12"
      }, {
        "id" : "13",
        "vertices" : [ {
          "x" : 1050,
          "y" : 1685
        } ]
      }, {
        "id" : "15",
        "vertices" : [ {
          "x" : 1160,
          "y" : 1400
        } ]
      }, {
        "id" : "16"
      }, {
        "id" : "22"
      }, {
        "id" : "24",
        "vertices" : [ {
          "x" : 3336,
          "y" : 1176
        } ]
      }, {
        "id" : "25",
        "vertices" : [ {
          "x" : 3353,
          "y" : 877
        } ]
      }, {
        "id" : "26"
      }, {
        "id" : "27",
        "vertices" : [ {
          "x" : 2975,
          "y" : 1460
        } ]
      }, {
        "id" : "28"
      }, {
        "id" : "29"
      }, {
        "id" : "32",
        "vertices" : [ {
          "x" : 2150,
          "y" : 1920
        } ]
      }, {
        "id" : "33",
        "vertices" : [ {
          "x" : 2866,
          "y" : 2425
        } ]
      }, {
        "id" : "34",
        "vertices" : [ {
          "x" : 2125,
          "y" : 2150
        } ]
      }, {
        "id" : "35",
        "vertices" : [ {
          "x" : 2856,
          "y" : 2040
        } ]
      }, {
        "id" : "46",
        "vertices" : [ {
          "x" : 1425,
          "y" : 2430
        } ]
      }, {
        "id" : "47",
        "vertices" : [ {
          "x" : 1839,
          "y" : 2520
        } ]
      }, {
        "id" : "48",
        "vertices" : [ {
          "x" : 1200,
          "y" : 2490
        } ]
      }, {
        "id" : "49",
        "vertices" : [ {
          "x" : 1075,
          "y" : 2540
        } ]
      }, {
        "id" : "50"
      }, {
        "id" : "55"
      }, {
        "id" : "56"
      }, {
        "id" : "57",
        "vertices" : [ {
          "x" : 2670,
          "y" : 3630
        } ]
      }, {
        "id" : "59"
      }, {
        "id" : "60"
      }, {
        "id" : "61"
      }, {
        "id" : "62"
      }, {
        "id" : "67"
      }, {
        "id" : "69"
      }, {
        "id" : "70"
      }, {
        "id" : "71",
        "vertices" : [ {
          "x" : 2200,
          "y" : 1200
        } ]
      }, {
        "id" : "72",
        "vertices" : [ {
          "x" : 2455,
          "y" : 1205
        } ]
      }, {
        "id" : "73",
        "vertices" : [ {
          "x" : 1890,
          "y" : 1215
        } ]
      }, {
        "id" : "74",
        "vertices" : [ {
          "x" : 3175,
          "y" : 3620
        } ]
      } ],
      "softwareSystemId" : "7"
    } ],
    "systemContextViews" : [ {
      "automaticLayout" : {
        "applied" : false,
        "edgeSeparation" : 0,
        "implementation" : "Graphviz",
        "nodeSeparation" : 300,
        "rankDirection" : "LeftRight",
        "rankSeparation" : 300,
        "vertices" : false
      },
      "elements" : [ {
        "id" : "1",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "2",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "3",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "4",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "5",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "6",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "7",
        "x" : 0,
        "y" : 0
      } ],
      "enterpriseBoundaryVisible" : true,
      "key" : "SystemContext",
      "order" : 1,
      "relationships" : [ {
        "id" : "14"
      }, {
        "id" : "23"
      }, {
        "id" : "58"
      }, {
        "id" : "61"
      }, {
        "id" : "62"
      }, {
        "id" : "68"
      } ],
      "softwareSystemId" : "7"
    } ]
  }
}